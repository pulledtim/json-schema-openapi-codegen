name: Release

on:
  push:
    branches:
      - main

jobs:

  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '17'
          java-package: jdk

      - id: pr
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.pr.outputs.labels }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION})"

  build-and-deploy:

    needs: [ "generate-version" ]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET_KEY }}
          passphrase: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
          server-id: sonatype-nexus
          server-username: SERVER_USERNAME
          server-password: SERVER_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Set version
        run: |
          mvn versions:set -DnewVersion=${{ needs.generate-version.outputs.version }}

      - name: Run tests
        run: |
          mvn clean test

      - name: List keys
        run: gpg -K

      - name: Build and release it
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        run: |
          mvn deploy -Dgpg.keyname=5A036613DDBAA4E0 --settings=.github/settings.xml

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          title: ${{ needs.generate-version.outputs.version }}
          prerelease: false
          files: |
            target/vc-issuer-${{ needs.generate-version.outputs.version }}.jar
            LICENSE
