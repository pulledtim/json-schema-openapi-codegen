name: Pre-Release

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:
  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Number
        id: pr_number
        run: echo "::set-output name=nr::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION}-PRE-${{ steps.pr_number.outputs.nr }}-${{github.run_number}})"

  build-and-deploy:

    needs: [ "generate-version" ]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET_KEY }}
          passphrase: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
          server-id: sonatype-nexus
          server-username: SERVER_USERNAME
          server-password: SERVER_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Set version
        run: |
          mvn versions:set -DnewVersion=${{ needs.generate-version.outputs.version }}

      - name: Run tests
        run: |
          mvn clean test

      - name: List keys
        run: gpg -K

      - name: Build and release it
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        run: |
          mvn install deploy -Prelease -Dgpg.keyname=5A036613DDBAA4E0

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          title: ${{ needs.generate-version.outputs.version }}
          prerelease: true
          files: |
            target/vc-issuer-${{ needs.generate-version.outputs.version }}.jar
            LICENSE
